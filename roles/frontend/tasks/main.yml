- name: Install Nginx
  ansible.builtin.yum:
    name: nginx
    state: installed

- name: removing old content
  ansible.builtin.file:
    path: /usr/share/nginx/html
    state: absent

- name: downloading Nginx web content and Extract it
  ansible.builtin.unarchive:
    src: https://github.com/roboshop-devops-project/frontend/archive/main.zip
    dest: /tmp
    remote_src: yes

- name: Copy Extracted Content
  ansible.builtin.copy:
    src: /tmp/frontend-main/static/
    dest: /usr/share/nginx/html/
    remote_src: yes
    ## Set to true to indicate the archived file is already on the remote system and not local to the Ansible controller.

##here in shell scripting, config file will be moved same as zip file. but, in ansible as a CMT can help to use in ansible playbook.
- name: Copy Roboshop Nginx Config File
  ansible.builtin.copy:
    src: roboshop.conf
    dest: /etc/nginx/default.d/roboshop.conf

- name: start Nginx Service
  ansible.builtin.systemd:
    state: restarted
    name: nginx
    enabled: yes
#
#  echo "Updating front config file"
#  sed -i -e '/catalogue/ s/localhost/catalogue.roboshop.internal/' -e '/user/ s/localhost/user.roboshop.internal/' -e '/cart/ s/localhost/cart.roboshop.internal/' -e '/shipping/ s/localhost/shipping.roboshop.internal/' -e '/payment/ s/localhost/payment.roboshop.internal/' /etc/nginx/default.d/roboshop.conf &>>$LOG_FILE
#  StatusCheck $?
#
#  #for component in catalogue user cart payment shipping ; do
#  # sed -i -e "/${component}/ s/localhost/${component}.roboshop.internal/" /etc/nginx/default.d/roboshop.conf &>>$LOG_FILE
#  #done
#
#  echo starting Nginx Service
#  systemctl enable nginx &>>$LOG_FILE
#  systemctl restart nginx &>>$LOG_FILE
#  StatusCheck $?
